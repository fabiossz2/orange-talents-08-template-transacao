version: '3'
services:

  mysql:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: propostas
      MYSQL_PASSWORD: root
    volumes:
      - "db-data:/var/lib/mysql"
    restart: on-failure

  microservice_consumer_transacoes:
    build:
      dockerfile: Dockerfile
      context: .
    image: microservice_consumer_transacoes
    ports:
      - "8082:8082"
    environment:
      SERVER_PORT: 8082
      MYSQL_HOST: mysql
      MYSQL_PASSWORD: root
      MYSQL_USER: root
      MYSQL_DATABASE: transacoes
      MYSQL_PORT: 3306
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/auth/realms/transacao
      KEYCLOAK_JWKS_URI: http://keycloak:8080/auth/realms/transacao/protocol/openid-connect/certs
      KAFKA_HOST: "kafka:29092"
      KAFKA_CONSUMER_GROUP_ID: minha-aplicacao
      KAFKA_AUTO-OFFSET-RESET: latest
      KAFKA_TOPIC_TRANSACOES: transacoes
    restart: on-failure
    depends_on:
      - mysql
      - transacoes
      - kafka

  transacoes:
    image: 'zupacademy/transacoes'
    ports:
      - 7777:7777
    depends_on:
      - kafka
    environment:
      SERVER_PORT: 7777
      LOG_LEVEL: INFO
      KAFKA_HOST: "kafka:29092"
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces

  jaeger:
    image: jaegertracing/all-in-one:1.21.0
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  prometheus:
    image: prom/prometheus:v2.22.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-volume:/etc/prometheus/
    ports:
      - "9090:9090"

  keycloak:
    image: jboss/keycloak:11.0.0
    ports:
      - 18443:8443
      - 18080:8080
      - 19990:9990
    depends_on:
      # Just a delay to wait for postgres! This is not recommended!
      - prometheus
      - kafka
      - zookeeper
      - microservice_consumer_transacoes
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      POSTGRES_PORT_5432_TCP_ADDR: 127.0.0.1
    restart: on-failure

  postgres:
    image: 'postgres:9.6-alpine'
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres

  zookeeper:
    image: "confluentinc/cp-zookeeper:5.2.1"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2

  kafka:
    image: "confluentinc/cp-kafka:5.2.1"
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

volumes:
  postgres-volume:
  prometheus-volume:
  db-data:

